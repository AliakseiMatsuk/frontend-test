@charset 'UTF-8';
:root
{
    --main-font: 'MyriadProRegular';
    --sub-font: 'QuicksandBold';
    --header-bg: #fff;
    --filters-bg: #f5f6f7;
    --btn-bg: #aa9b77;
    --btn-color: #fff;
    --item-title-color: #aa9b77;
}

/* Large Devices, Wide Screens */
/* Medium Devices, Desktops */
/* Small Devices, Tablets */
/* Extra Small Devices, Phones */
/* Custom, iPhone Retina */
._list-reset,
.filter-list,
.color-list
{
    margin: 0;
    padding: 0;

    list-style: none;
}

@font-face
{
    font-family: 'MyriadProRegular';
    font-style: normal; 

    src: url('../fonts/MyriadPro-Regular.eot?#iefix') format('embedded-opentype');
}

@font-face
{
    font-family: 'QuicksandBold';
    font-style: normal; 

    src: url('../fonts/quicksand-Bold.woff') format('woff'), url('../fonts/quicksand-Bold.ttf') format('truetype');
}

html
{
    font-family: 'MyriadProRegular', sans-serif;
    font-family: var(--main-font);
    font-size: 16px;
    font-weight: 400; 
    line-height: 1.42;

    -webkit-font-smoothing: antialised;
}
html *
{
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
}
html a:focus,
html a:active,
html button:focus,
html button:active,
html label:focus,
html label:active
{
    outline: none;
    -webkit-box-shadow: 0 0 1px 0 #aa9b77;
    -webkit-box-shadow: 0 0 1px 0 var(--btn-bg);
            box-shadow: 0 0 1px 0 #aa9b77;
            box-shadow: 0 0 1px 0 var(--btn-bg);
}

.cat-slider__title
{
    font-family: 'QuicksandBold', sans-serif;
    font-family: var(--sub-font);
    font-size: 1.25rem;
    font-weight: 700;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    padding: 45px 0 45px; 

    text-transform: uppercase;

    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.cat-slider__title_left:after
{
    display: inline-block;

    width: 100%;
    height: 2px;
    margin-left: 50px; 

    content: '';

    background-color: #ccc;
}
.cat-slider__title_right:before
{
    display: inline-block;

    width: 100%;
    height: 2px;
    margin-right: 8px; 

    content: '';

    background-color: #ccc;
}

.header
{
    background-color: #fff;
    background-color: var(--header-bg);
}
.header__logo
{
    padding: 25px 0; 

    text-align: center;
}

input[type='checkbox'],
input[type='radio']
{
    opacity: 0;
    outline: none;

    -ms-touch-action: none;
        touch-action: none;
}

label
{
    -ms-touch-action: none;
        touch-action: none;
}

.custom-check
{
    position: relative; 

    display: inline-block;
}
.custom-check__checkbox
{
    position: absolute;
    top: 0; 
    left: 0;

    display: block;

    width: 25px;
    height: 25px;
}
.custom-check__text
{
    font-family: 'QuicksandBold', sans-serif;
    font-family: var(--sub-font);
    font-size: 1.125rem;
    font-weight: 700;

    top: 0;
    left: 0;

    display: block;

    padding-left: 45px; 

    cursor: pointer;

    color: #333;
}

.check-B__background
{
    border: solid 2px #ccc; 
    background-color: #fff;
}

.check-B__checkbox
{
    -webkit-box-shadow: none;
            box-shadow: none;
}

.check-B:checked + .check-B__background
{
    border: solid 2px #aa9b77;
    background-color: #fff;
    -webkit-box-shadow: none;
            box-shadow: none;
}

.check-B:checked + .check-B__background + .check-B__checkbox
{
    top: 6px;
    left: 6px;

    width: 13px;
    height: 8px;

    -webkit-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);

    border: 3px solid #aa9b77;
    border-top: none;
    border-right: none;
    border-radius: 0; 
    -webkit-box-shadow: none;
            box-shadow: none;
}

/* .retina-sprite-block{
  @include retina-sprite($abiatec-group);
} */
.container
{
    display: block;
    float: none;

    width: auto;
    max-width: 1280px;
    margin-right: auto;
    margin-left: auto;
    padding-right: 0; 
    padding-left: 0;
}
.container::after
{
    display: table;
    clear: both; 

    content: '';
}

.title
{
    color: #424242;
}

.filters
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    padding: 45px 95px; 

    background-color: #f5f6f7;
    background-color: var(--filters-bg);

    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
}
.filters__button
{
    width: 100%;
    max-width: 205px;
    height: 52px;

    cursor: pointer; 
    text-transform: uppercase;
}

.filter-list
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.filter-list__item:not(:last-child)
{
    margin-right: 40px;
}

.btn
{
    font-family: 'QuicksandBold', sans-serif;
    font-family: var(--sub-font);
    font-size: .875rem; 
    font-weight: 700;

    color: #fff;
    color: var(--btn-color);
    border: none;
    border-radius: 3px;
    background-color: #aa9b77;
    background-color: var(--btn-bg);
}

.sorting
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.sorting__title
{
    font-family: 'QuicksandBold', sans-serif;
    font-family: var(--sub-font);
    font-size: 1.25rem; 
    font-weight: 700;
}

.color-list
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.color-list__item
{
    width: 22px;
    height: 22px;

    border-radius: 50%;
}
.color-list__item:not(:last-child)
{
    margin-right: 5px;
}

.item__top,
.item__bottom
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}

.item__size
{
    width: 50%;
}

.item__color
{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    width: 50%;

    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
}

.item__name
{
    font-family: 'QuicksandBold', sans-serif;
    font-family: var(--sub-font);
    font-size: 1.125rem;
    font-weight: 700;

    width: 50%;

    color: #aa9b77;
    color: var(--item-title-color);
}

.item__price
{
    font-family: 'QuicksandBold', sans-serif;
    font-family: var(--sub-font);
    font-size: 1.375rem;
    font-weight: 700; 

    width: 50%;

    text-align: right;
}
.item__price:after
{
    font-family: 'MyriadProRegular', sans-serif;
    font-family: var(--main-font);
    font-family: 'MyriadProRegular'; 
    font-weight: 400;

    content: 'â‚¬';
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
